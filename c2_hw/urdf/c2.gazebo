<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro"
	xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
	xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
	xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" >

	<!-- ros_control plugin -->
	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>/</robotNamespace>
			<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
		</plugin>
	</gazebo>
	
	<!-- The Base footprint -->
	<gazebo reference="base_footprint">
		<material>Gazebo/Green</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	
	<!-- The Base -->
	<gazebo reference="base_link">
		<material>Gazebo/Blue</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>
	
	<!-- The wheels -->
	<xacro:macro name="wheel_gazebo" params="side">
		<!-- Contact model for the wheel surface -->
		<gazebo reference="wheel_${side}_link">
			<kp>1000000.0</kp>
			<kd>100.0</kd>
			<mu1>1.0</mu1>
			<mu2>1.0</mu2>
			<fdir1>1 0 0</fdir1>
			<maxVel>1.0</maxVel>
			<minDepth>0.003</minDepth>
			<implicitSpringDamper>1</implicitSpringDamper>
			<material>Gazebo/Yellow</material>
		</gazebo>
	</xacro:macro>

	<xacro:wheel_gazebo side="left"/>
	<xacro:wheel_gazebo side="right"/>
	<xacro:wheel_gazebo side="tail"/>

	<!-- Camera -->
	<gazebo reference="camera_link">
		<mu1>0.2</mu1>
		<mu2>0.2</mu2>
		<material>Gazebo/Red</material>
	</gazebo>
	
	<gazebo reference="camera_link">
		<sensor type="camera" name="camera1">
			<update_rate>30.0</update_rate>
			<camera name="head">
				<horizontal_fov>1.3962634</horizontal_fov>
				<image>
					<width>800</width>
					<height>800</height>
					<format>R8G8B8</format>
				</image>
				<clip>
					<near>0.02</near>
					<far>300</far>
				</clip>
				<noise>
					<type>gaussian</type>
					<!-- Noise is sampled independently per pixel on each frame.  
					That pixel's noise value is added to each of its color
					channels, which at that point lie in the range [0,1]. -->
					<mean>0.0</mean>
					<stddev>0.007</stddev>
				</noise>
			</camera>
			<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>0.0</updateRate>
				<cameraName>c2/camera1</cameraName>
				<imageTopicName>image_raw</imageTopicName>
				<cameraInfoTopicName>camera_info</cameraInfoTopicName>
				<frameName>camera_link_optical</frameName>
				<!-- setting hackBaseline to anything but 0.0 will cause a misalignment	between the gazebo sensor image and the frame it is supposed to	be attached to -->
				<hackBaseline>0.0</hackBaseline>
				<distortionK1>0.0</distortionK1>
				<distortionK2>0.0</distortionK2>
				<distortionK3>0.0</distortionK3>
				<distortionT1>0.0</distortionT1>
				<distortionT2>0.0</distortionT2>
				<CxPrime>0</CxPrime>
				<Cx>0.0</Cx>
				<Cy>0.0</Cy>
				<focalLength>0.0</focalLength>
			</plugin>
		</sensor>
	</gazebo>

	
	<!-- Hokuyo Laser -->
	<gazebo reference="hokuyo_link">
		<mu1>0.2</mu1>
		<mu2>0.2</mu2>
		<material>Gazebo/White</material>
	</gazebo>
	
	<gazebo reference="hokuyo_link">
		<sensor type="ray" name="head_hokuyo_sensor"> <!-- or gpu_ray -->
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>40</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>720</samples>
						<resolution>1</resolution>
						<min_angle>-1.570796</min_angle>
						<max_angle>1.570796</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>30.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<!-- Noise parameters based on published spec for Hokuyo laser
					achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
					stddev of 0.01m will put 99.7% of samples within 0.03m of the true
					reading. -->
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so"> <!-- or libgazebo_ros_gpu_laser.so -->
				<topicName>/scan</topicName>
				<frameName>hokuyo_link</frameName>
			</plugin>
		</sensor>
	</gazebo>
	
	<!-- Differential drive controller  -->
	<gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<rosDebugLevel>Debug</rosDebugLevel>
			<publishWheelTF>true</publishWheelTF>
			<robotNamespace>/</robotNamespace>
			<publishTf>1</publishTf>
			<publishWheelJointState>true</publishWheelJointState>
			<alwaysOn>true</alwaysOn>
			<updateRate>10.0</updateRate>
			<legacyMode>false</legacyMode>
			<leftJoint>wheel_left_joint</leftJoint>
			<rightJoint>wheel_right_joint</rightJoint>
			<wheelSeparation>0.106</wheelSeparation>
			<wheelDiameter>0.066</wheelDiameter>
			<broadcastTF>1</broadcastTF>
			<wheelTorque>30</wheelTorque>
			<wheelAcceleration>1.8</wheelAcceleration>
			<commandTopic>cmd_vel</commandTopic>
			<odometryFrame>odom</odometryFrame> 
			<odometryTopic>odom</odometryTopic> 
			<robotBaseFrame>base_footprint</robotBaseFrame>
		</plugin>
	</gazebo>
</robot>
